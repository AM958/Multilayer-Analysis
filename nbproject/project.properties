annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.title=MultilevelCNets
application.vendor=Spiros
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/MultilevelCNets.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.collections-generic-4.01.jar=collections-generic-4.01.jar
file.reference.collections-generic-4.01.jar-1=lib\\collections-generic-4.01.jar
file.reference.colt-1.2.0.jar=colt-1.2.0.jar
file.reference.colt-1.2.0.jar-1=lib\\colt-1.2.0.jar
file.reference.concurrent-1.3.4.jar=concurrent-1.3.4.jar
file.reference.concurrent-1.3.4.jar-1=lib\\concurrent-1.3.4.jar
file.reference.freehep-export-2.1.1.jar=lib\\freehep-export-2.1.1.jar
file.reference.freehep-graphics2d-2.1.1.jar=lib\\freehep-graphics2d-2.1.1.jar
file.reference.freehep-graphicsio-2.1.1.jar=lib\\freehep-graphicsio-2.1.1.jar
file.reference.freehep-graphicsio-emf-2.1.1.jar=lib\\freehep-graphicsio-emf-2.1.1.jar
file.reference.freehep-graphicsio-java-2.1.1.jar=lib\\freehep-graphicsio-java-2.1.1.jar
file.reference.freehep-graphicsio-pdf-2.1.1.jar=lib\\freehep-graphicsio-pdf-2.1.1.jar
file.reference.freehep-graphicsio-ps-2.1.1.jar=lib\\freehep-graphicsio-ps-2.1.1.jar
file.reference.freehep-graphicsio-svg-2.1.1.jar=lib\\freehep-graphicsio-svg-2.1.1.jar
file.reference.freehep-graphicsio-swf-2.1.1.jar=lib\\freehep-graphicsio-swf-2.1.1.jar
file.reference.freehep-graphicsio-tests-2.1.1.jar=lib\\freehep-graphicsio-tests-2.1.1.jar
file.reference.freehep-io-2.0.2.jar=lib\\freehep-io-2.0.2.jar
file.reference.freehep-swing-2.0.3.jar=lib\\freehep-swing-2.0.3.jar
file.reference.freehep-util-2.0.2.jar=lib\\freehep-util-2.0.2.jar
file.reference.freehep-xml-2.1.1.jar=lib\\freehep-xml-2.1.1.jar
file.reference.j3d-core-1.3.1.jar=j3d-core-1.3.1.jar
file.reference.j3d-core-1.3.1.jar-1=lib\\j3d-core-1.3.1.jar
file.reference.jas-plotter-2.2.jar=lib\\jas-plotter-2.2.jar
file.reference.jdom-1.0.jar=lib\\jdom-1.0.jar
file.reference.JTattoo-1.6.11.jar=JTattoo-1.6.11.jar
file.reference.JTattoo-1.6.11.jar-1=lib\\JTattoo-1.6.11.jar
file.reference.jung-3d-2.0.1.jar=jung-3d-2.0.1.jar
file.reference.jung-3d-2.0.1.jar-1=lib\\jung-3d-2.0.1.jar
file.reference.jung-3d-demos-2.0.1.jar=jung-3d-demos-2.0.1.jar
file.reference.jung-3d-demos-2.0.1.jar-1=lib\\jung-3d-demos-2.0.1.jar
file.reference.jung-algorithms-2.0.1.jar=jung-algorithms-2.0.1.jar
file.reference.jung-algorithms-2.0.1.jar-1=lib\\jung-algorithms-2.0.1.jar
file.reference.jung-api-2.0.1.jar=jung-api-2.0.1.jar
file.reference.jung-api-2.0.1.jar-1=lib\\jung-api-2.0.1.jar
file.reference.jung-graph-impl-2.0.1.jar=jung-graph-impl-2.0.1.jar
file.reference.jung-graph-impl-2.0.1.jar-1=lib\\jung-graph-impl-2.0.1.jar
file.reference.jung-io-2.0.1.jar=jung-io-2.0.1.jar
file.reference.jung-io-2.0.1.jar-1=lib\\jung-io-2.0.1.jar
file.reference.jung-jai-2.0.1.jar=jung-jai-2.0.1.jar
file.reference.jung-jai-2.0.1.jar-1=lib\\jung-jai-2.0.1.jar
file.reference.jung-jai-samples-2.0.1.jar=jung-jai-samples-2.0.1.jar
file.reference.jung-jai-samples-2.0.1.jar-1=lib\\jung-jai-samples-2.0.1.jar
file.reference.jung-samples-2.0.1.jar=jung-samples-2.0.1.jar
file.reference.jung-samples-2.0.1.jar-1=lib\\jung-samples-2.0.1.jar
file.reference.jung-visualization-2.0.1.jar=jung-visualization-2.0.1.jar
file.reference.jung-visualization-2.0.1.jar-1=lib\\jung-visualization-2.0.1.jar
file.reference.junit-3.8.2.jar=lib\\junit-3.8.2.jar
file.reference.openide-lookup-1.9-patched-1.0.jar=lib\\openide-lookup-1.9-patched-1.0.jar
file.reference.stax-api-1.0.1.jar=stax-api-1.0.1.jar
file.reference.stax-api-1.0.1.jar-1=lib\\stax-api-1.0.1.jar
file.reference.Test-lib=lib\\
file.reference.vecmath-1.3.1.jar=vecmath-1.3.1.jar
file.reference.vecmath-1.3.1.jar-1=lib\\vecmath-1.3.1.jar
file.reference.weblaf-complete-1.29.jar=weblaf-complete-1.29.jar
file.reference.weblaf-complete-1.29.jar-1=lib\\weblaf-complete-1.29.jar
file.reference.wstx-asl-3.2.6.jar=wstx-asl-3.2.6.jar
file.reference.wstx-asl-3.2.6.jar-1=lib\\wstx-asl-3.2.6.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.jung-algorithms-2.0.1.jar}:\
    ${file.reference.jung-graph-impl-2.0.1.jar}:\
    ${file.reference.jung-visualization-2.0.1.jar}:\
    ${file.reference.collections-generic-4.01.jar}:\
    ${file.reference.colt-1.2.0.jar}:\
    ${file.reference.concurrent-1.3.4.jar}:\
    ${file.reference.j3d-core-1.3.1.jar}:\
    ${file.reference.jung-3d-2.0.1.jar}:\
    ${file.reference.jung-3d-demos-2.0.1.jar}:\
    ${file.reference.jung-api-2.0.1.jar}:\
    ${file.reference.jung-io-2.0.1.jar}:\
    ${file.reference.jung-jai-2.0.1.jar}:\
    ${file.reference.jung-jai-samples-2.0.1.jar}:\
    ${file.reference.jung-samples-2.0.1.jar}:\
    ${file.reference.stax-api-1.0.1.jar}:\
    ${file.reference.vecmath-1.3.1.jar}:\
    ${file.reference.wstx-asl-3.2.6.jar}:\
    ${file.reference.JTattoo-1.6.11.jar}:\
    ${file.reference.weblaf-complete-1.29.jar}:\
    ${file.reference.JTattoo-1.6.11.jar-1}:\
    ${file.reference.collections-generic-4.01.jar-1}:\
    ${file.reference.colt-1.2.0.jar-1}:\
    ${file.reference.concurrent-1.3.4.jar-1}:\
    ${file.reference.j3d-core-1.3.1.jar-1}:\
    ${file.reference.jung-3d-2.0.1.jar-1}:\
    ${file.reference.jung-3d-demos-2.0.1.jar-1}:\
    ${file.reference.jung-algorithms-2.0.1.jar-1}:\
    ${file.reference.jung-api-2.0.1.jar-1}:\
    ${file.reference.jung-graph-impl-2.0.1.jar-1}:\
    ${file.reference.jung-io-2.0.1.jar-1}:\
    ${file.reference.jung-jai-2.0.1.jar-1}:\
    ${file.reference.jung-jai-samples-2.0.1.jar-1}:\
    ${file.reference.jung-samples-2.0.1.jar-1}:\
    ${file.reference.jung-visualization-2.0.1.jar-1}:\
    ${file.reference.stax-api-1.0.1.jar-1}:\
    ${file.reference.vecmath-1.3.1.jar-1}:\
    ${file.reference.weblaf-complete-1.29.jar-1}:\
    ${file.reference.wstx-asl-3.2.6.jar-1}:\
    ${libs.eclipselink.classpath}:\
    ${libs.absolutelayout.classpath}:\
    ${file.reference.Test-lib}:\
    ${file.reference.freehep-export-2.1.1.jar}:\
    ${file.reference.freehep-graphics2d-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-emf-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-java-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-pdf-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-ps-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-svg-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-swf-2.1.1.jar}:\
    ${file.reference.freehep-graphicsio-tests-2.1.1.jar}:\
    ${file.reference.freehep-io-2.0.2.jar}:\
    ${file.reference.freehep-swing-2.0.3.jar}:\
    ${file.reference.freehep-util-2.0.2.jar}:\
    ${file.reference.freehep-xml-2.1.1.jar}:\
    ${file.reference.jas-plotter-2.2.jar}:\
    ${file.reference.jdom-1.0.jar}:\
    ${file.reference.junit-3.8.2.jar}:\
    ${file.reference.openide-lookup-1.9-patched-1.0.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.7
javac.target=1.7
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.reference.jung-graph-impl-2.0.1.jar-1=lib/apidocs/edu/uci/ics/jung
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
main.class=multilevel.control.MultilayerCNets
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
